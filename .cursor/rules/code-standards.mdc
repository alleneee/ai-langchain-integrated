---
description: 编写项目代码所需要遵循的代码开发规范和规则
globs: 
alwaysApply: false
---
# 代码开发标准

Dify-Connect 项目的代码开发应遵循以下标准和原则：

## Python版本和风格

- 使用Python 3.12
- 严格遵循PEP 8风格指南
- 使用类型注解提高代码可读性和安全性
- 所有函数、类和方法必须有文档字符串（docstring）

## 目录结构和文件组织

- 按功能模块组织代码
- 相关功能应放在同一目录下
- 文件名使用小写字母和下划线分隔
- 测试文件放在tests目录下，与源代码结构对应

## 命名约定

- 类名使用CamelCase命名法（如`UserService`）
- 函数和变量使用snake_case命名法（如`get_user_by_id`）
- 常量使用大写字母和下划线（如`DEFAULT_TIMEOUT`）
- 私有方法和属性使用单下划线前缀（如`_calculate_hash`）

## 代码质量

- 使用pylint或flake8等静态分析工具
- 为核心功能编写单元测试
- 避免代码重复，提取共用功能到工具类
- 避免复杂的嵌套条件和循环

## 异步编程

- 使用`async`/`await`语法进行异步编程
- IO密集型操作应该是异步的
- 避免在异步代码中使用阻塞调用

## 错误处理

- 适当使用异常而不是返回错误代码
- 创建自定义异常类表示业务逻辑错误
- 在合适的层级处理异常
- 记录详细的错误信息和上下文

## 配置管理

- 使用环境变量配置应用
- 敏感信息不应硬编码在代码中
- 使用Pydantic设置模型管理配置

## 日志

- 使用Python标准日志库或loguru
- 不同级别日志使用适当的日志级别
- 生产环境禁用DEBUG日志
- 包含足够上下文信息以便调试